{"ast":null,"code":"import { connect } from 'react-redux';\nimport { toggleTodo } from '../actions';\nimport List from '../components/list';\nimport { filters } from '../actions';\n\nconst getVisibleTodos = (todos, filter) => {\n  switch (filter) {\n    case filters.ALL:\n      return todos;\n\n    case filters.FINISHED:\n      return todos.filter(t => t.completed);\n\n    case filters.IN_PROGRESS:\n      return todos.filter(t => !t.completed);\n\n    default:\n      throw new Error('Unknown filter: ' + filter);\n  }\n};\n\nconst mapStateToProps = state => ({\n  todos: getVisibleTodos(state.todos, state.filters)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleTodo: id => dispatch(toggleTodo(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","map":{"version":3,"sources":["/Users/albertlouzon/Documents/GitHub/Frogotten/src/containers/List-UI.js"],"names":["connect","toggleTodo","List","filters","getVisibleTodos","todos","filter","ALL","FINISHED","t","completed","IN_PROGRESS","Error","mapStateToProps","state","mapDispatchToProps","dispatch","id"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,OAAT,QAAwB,YAAxB;;AAEA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACvC,UAAQA,MAAR;AACI,SAAKH,OAAO,CAACI,GAAb;AACI,aAAOF,KAAP;;AACJ,SAAKF,OAAO,CAACK,QAAb;AACI,aAAOH,KAAK,CAACC,MAAN,CAAaG,CAAC,IAAIA,CAAC,CAACC,SAApB,CAAP;;AACJ,SAAKP,OAAO,CAACQ,WAAb;AACI,aAAON,KAAK,CAACC,MAAN,CAAaG,CAAC,IAAI,CAACA,CAAC,CAACC,SAArB,CAAP;;AACJ;AACI,YAAM,IAAIE,KAAJ,CAAU,qBAAqBN,MAA/B,CAAN;AARR;AAUH,CAXD;;AAaA,MAAMO,eAAe,GAAGC,KAAK,KAAK;AAC9BT,EAAAA,KAAK,EAAED,eAAe,CAACU,KAAK,CAACT,KAAP,EAAcS,KAAK,CAACX,OAApB;AADQ,CAAL,CAA7B;;AAIA,MAAMY,kBAAkB,GAAGC,QAAQ,KAAK;AACpCf,EAAAA,UAAU,EAAEgB,EAAE,IAAID,QAAQ,CAACf,UAAU,CAACgB,EAAD,CAAX;AADU,CAAL,CAAnC;;AAIA,eAAejB,OAAO,CAClBa,eADkB,EAElBE,kBAFkB,CAAP,CAGbb,IAHa,CAAf","sourcesContent":["import { connect } from 'react-redux'\nimport { toggleTodo } from '../actions'\nimport List from '../components/list'\nimport { filters } from '../actions'\n\nconst getVisibleTodos = (todos, filter) => {\n    switch (filter) {\n        case filters.ALL:\n            return todos\n        case filters.FINISHED:\n            return todos.filter(t => t.completed)\n        case filters.IN_PROGRESS:\n            return todos.filter(t => !t.completed)\n        default:\n            throw new Error('Unknown filter: ' + filter)\n    }\n}\n\nconst mapStateToProps = state => ({\n    todos: getVisibleTodos(state.todos, state.filters)\n})\n\nconst mapDispatchToProps = dispatch => ({\n    toggleTodo: id => dispatch(toggleTodo(id))\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(List)\n"]},"metadata":{},"sourceType":"module"}